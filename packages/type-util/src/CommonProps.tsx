/**
 * `T1`と`T2`に共通するプロパティ`K`を抽出した型を構築します。
 *
 * 抽出されたプロパティKの型はT1[K]とT2[K]のうち、より狭い方の型となります。
 * * T1[K] extends T2[K] -> T1[K]
 * * T2[K] extends T1[K] -> T2[K]
 *
 * T1[K]とT2[K]の間に継承関係がない場合は`never`となります。
 */
export type CommonProps<T1, T2> = {
  // T1とT2の双方に存在するプロパティを抽出する
  [K in keyof T1 & keyof T2]: T1[K] extends T2[K]
    ? // T1[K]がT2[K]を継承しているなら、このプロパティの型はT1[K]とします。
      T1[K]
    : // T1[K]がT2[K]を継承していない場合は、逆にT2[K]がT1[K]を継承しているかどうか確認する。
    T2[K] extends T1[K]
    ? // T2[K]がT1[K]を継承していないなら、このプロパティの型はT2[K]とします。
      T2[K]
    : // T1[K]がT2[K]が相互に継承関係にない場合は、`never`とします。
      never;
};
